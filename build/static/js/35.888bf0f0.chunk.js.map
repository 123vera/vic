{"version":3,"sources":["pages/Video/index.js"],"names":["Video","toPlay","num","name","videoplay","document","getElementById","concat","isiOS","navigator","userAgent","match","onclick","paused","play","videoPalse","style","display","pause","addEventListener","e","src","WOW","live","init","_this2","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","id","className","type","width","poster","preload","controlsList","playsInline","webkit-playsinline","x5-video-player-type","react_svg__WEBPACK_IMPORTED_MODULE_7__","onClick","Component"],"mappings":"oMAKMA,qNAKFC,OAAS,SAACC,EAAKC,GAEX,IAAIC,EAAYC,SAASC,eAAT,QAAAC,OAAgCL,IAE1CM,IADIC,UAAUC,UACFC,MAAM,iCACpBP,IAEAA,EAAUQ,QAAU,WACZR,EAAUS,QACVT,EAAUU,OACVC,EAAWC,MAAMC,QAAU,SAE3Bb,EAAUc,QACVH,EAAWC,MAAMC,QAAU,UAI/BT,GAEAJ,EAAUe,iBAAiB,QAAS,SAAUC,GAE1CL,EAAWC,MAAMC,QAAU,QAC3Bb,EAAUiB,IAAV,UAAAd,OAA0BJ,EAA1B,WAMZ,IAAIY,EAAaV,SAASC,eAAT,aAAAC,OAAqCL,IAClDa,IACAA,EAAWH,QAAU,WACbR,EAAUS,QACVT,EAAUU,OACVC,EAAWC,MAAMC,QAAU,SAE3Bb,EAAUc,QACVH,EAAWC,MAAMC,QAAU,+FAvCvC,IAAIK,MAAI,CAACC,MAAM,IAAQC,wCA6ClB,IAAAC,EAAAC,KACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,QAAQC,UAAU,eACtBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,SACIC,GAAG,SACHE,KAAK,YACLC,MAAM,OACNZ,IAAI,sBACJa,OAAO,wBACPC,QAAQ,OACRC,aAAa,aACbC,aAAa,EACbC,qBAAmB,OACnBC,uBAAqB,OAEzBZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACInB,IAAI,0BACJS,GAAG,cACHC,UAAU,aACVU,QAAS,kBAAMhB,EAAKxB,OAAO,EAAG,eAKtC0B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACXJ,EAAAC,EAAAC,cAAA,gFACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,8BAGRF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,SACIC,GAAG,SACHE,KAAK,YACLC,MAAM,OACNZ,IAAI,mBACJa,OAAO,oBACPC,QAAQ,OACRC,aAAa,aACbC,aAAa,EACbC,qBAAmB,OACnBC,uBAAqB,OAEzBZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACInB,IAAI,0BACJS,GAAG,cACHC,UAAU,aACVU,QAAS,kBAAMhB,EAAKxB,OAAO,EAAG,YAKtC0B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACXJ,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,sCAzGJa,cAiHL1C","file":"static/js/35.888bf0f0.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport {WOW} from \"wowjs\";\nimport ReactSVG from 'react-svg'\nimport './index.scss'\n\nclass Video extends Component {\n    componentDidMount() {\n        new WOW({live: false}).init()\n    }\n\n    toPlay = (num, name) => {\n        //点击屏幕的时候暂停，并且图片隐藏，再次点击视频或者图片的时候播放\n        let videoplay = document.getElementById(`video${num}`);\n        const u = navigator.userAgent;\n        const isiOS = !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/); //ios终端\n        if (videoplay) {\n            //点击图片的时候暂停，并且使图片隐藏，再次点击视频或者图片的时候播放\n            videoplay.onclick = function () {\n                if (videoplay.paused) {\n                    videoplay.play();\n                    videoPalse.style.display = \"none\";   //播放的时候图标隐藏\n                } else {\n                    videoplay.pause();\n                    videoPalse.style.display = \"block\";   //暂停的时候图标显示\n                }\n            };\n            //对于ios系统播放完毕之后变黑的情况,在播放结束的时候所以要重新刷新一下src\n            if (isiOS) {\n                //isiOS是我设置的变量判断ios系统的常量，如果需要判断条件可以评论或者私信我\n                videoplay.addEventListener('ended', function (e) {\n                    // 播放结束时触发的时候使播放图标显示，同时播放完之后重新加载video的src\n                    videoPalse.style.display = \"block\";\n                    videoplay.src = `/video/${name}.mp4`\n                })\n            }\n\n        }\n        //同样点击图标的时候也需要播放暂停，下面是对图标的处理\n        let videoPalse = document.getElementById(`videoPalse${num}`);    //video标签\n        if (videoPalse) {\n            videoPalse.onclick = function () {\n                if (videoplay.paused) {     //点击视频的时候如果暂停状态，则让其播放\n                    videoplay.play();\n                    videoPalse.style.display = \"none\";\n                } else {\n                    videoplay.pause();\n                    videoPalse.style.display = \"block\";\n                }\n            };\n        }\n    }\n\n    render() {\n        return (\n            <div id='video' className='padding-top'>\n                <div className='video-wrapper'>\n                    <div className='box'>\n                        <video\n                            id='video1'\n                            type='video/mp4'\n                            width='100%'\n                            src='./video/teamlab.mp4'\n                            poster='./images/team-lab.png'\n                            preload=\"none\"\n                            controlsList=\"nodownload\"\n                            playsInline={true}   // 小屏播放\n                            webkit-playsinline=\"true\"  // ios系统下小屏播放\n                            x5-video-player-type=\"h5\"\n                        />\n                        <ReactSVG\n                            src='./images/video-play.svg'\n                            id=\"videoPalse1\"\n                            className='video-play'\n                            onClick={() => this.toPlay(1, 'teamlab')}/>\n                        {/*<img src='./images/video-play.svg' alt='' id=\"videoPalse1\" className='video-play'\n                             onClick={() => this.toPlay(1, 'teamlab')}/>*/}\n                    </div>\n\n                    <div className='desc-p'>\n                        <p>teamlab：油罐中的水粒子世界</p>\n                        <p>2019年</p>\n                        <p>1分11秒</p>\n                    </div>\n                </div>\n                <div className='video-wrapper'>\n                    <div className='box'>\n                        <video\n                            id='video2'\n                            type=\"video/mp4\"\n                            width='100%'\n                            src='./video/room.mp4'\n                            poster='./images/room.png'\n                            preload=\"none\"\n                            controlsList=\"nodownload\"\n                            playsInline={true}   // 小屏播放\n                            webkit-playsinline=\"true\"  // ios系统下小屏播放\n                            x5-video-player-type=\"h5\"\n                        />\n                        <ReactSVG\n                            src='./images/video-play.svg'\n                            id=\"videoPalse2\"\n                            className='video-play'\n                            onClick={() => this.toPlay(2, 'room')}/>\n                        {/* <img alt='' src='./images/video-play.svg' id=\"videoPalse2\" className='video-play'\n                             onClick={() => this.toPlay(2, 'room')}/>*/}\n                    </div>\n\n                    <div className='desc-p'>\n                        <p>ROOM</p>\n                        <p>2019年</p>\n                        <p>1分32秒</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Video\n"],"sourceRoot":""}